module dmem #(parameter MEM_SIZE = 64) (
    input wire [31:0] address,     // Endereço de acesso (fornecido pela ULA)
    input wire [31:0] writeData,   // Dado a ser escrito (fornecido pelo regfile)
    input wire MemWrite,           // Sinal de controle de escrita
    input wire MemRead,            // Sinal de controle de leitura
    output wire [31:0] ReadData    // Saída da memória (dado lido)
);

    // Memória RAM de 32 bits x MEM_SIZE palavras
    reg [31:0] memory [0:MEM_SIZE - 1];

    // Escrita assíncrona na memória (ocorre sempre que MemWrite estiver ativo)
    always_comb begin
        if (MemWrite) 
            memory[address >> 2] = writeData; 
    end

    // Leitura assíncrona (sempre disponível quando MemRead está ativado)
    assign ReadData = (MemRead) ? memory[address >> 2] : 32'bz; // Alta impedância se MemRead = 0

endmodule
